name: 'Analyze Version Bump Type'
description: 'Analyzes commits since last tag to determine version bump type'
inputs:
  last-tag:
    description: 'Last version tag to analyze from'
    required: true
  max-commits:
    description: 'Maximum commits to analyze if no tag found'
    required: false
    default: '10'
outputs:
  bump-type:
    description: 'Determined bump type (major, minor, patch)'
    value: ${{ steps.analyze.outputs.bump-type }}
  commit-count:
    description: 'Number of commits analyzed'
    value: ${{ steps.analyze.outputs.commit-count }}
  latest-sha:
    description: 'Latest commit SHA in the range'
    value: ${{ steps.analyze.outputs.latest-sha }}

runs:
  using: 'composite'
  steps:
    - name: Analyze commits for bump type
      id: analyze
      shell: bash
      run: |
        LAST_TAG="${{ inputs.last-tag }}"
        MAX_COMMITS="${{ inputs.max-commits }}"

        echo "🔍 Analyzing commits since: $LAST_TAG"

        # Get commits since last tag
        if [[ "$LAST_TAG" == "v0.0.0" ]] || [[ -z "$LAST_TAG" ]]; then
          echo "📝 No previous tag found, analyzing last $MAX_COMMITS commits"
          COMMITS=$(git log --oneline --format="%H %s" HEAD~${MAX_COMMITS}..HEAD 2>/dev/null || git log --oneline --format="%H %s" --max-count=$MAX_COMMITS)
        else
          echo "📝 Analyzing commits since $LAST_TAG"
          COMMITS=$(git log --oneline --format="%H %s" ${LAST_TAG}..HEAD 2>/dev/null || echo "")
        fi

        if [[ -z "$COMMITS" ]]; then
          echo "⚠️ No commits found to analyze"
          echo "bump-type=patch" >> $GITHUB_OUTPUT
          echo "changelog=No recent commits found" >> $GITHUB_OUTPUT
          echo "commit-count=0" >> $GITHUB_OUTPUT
          exit 0
        fi

        # Count commits
        COMMIT_COUNT=$(echo "$COMMITS" | wc -l | tr -d ' ')
        echo "📊 Found $COMMIT_COUNT commits to analyze"

        # Analyze commit messages for version bump indicators
        BUMP_TYPE="patch"  # Default to patch

        echo "🔍 Scanning commit messages..."

        # Check for breaking changes (major)
        if echo "$COMMITS" | grep -iE "(BREAKING|breaking change|major)" >/dev/null; then
          BUMP_TYPE="major"
          echo "🚨 Found breaking changes → major bump"
        # Check for features (minor)  
        elif echo "$COMMITS" | grep -iE "(feat|feature|minor|add)" >/dev/null; then
          BUMP_TYPE="minor"
          echo "✨ Found new features → minor bump"
        # Default to patch for fixes, chores, etc.
        else
          echo "🔧 Found fixes/improvements → patch bump"
        fi

        # Set outputs for bump type and commit count
        echo "bump-type=$BUMP_TYPE" >> $GITHUB_OUTPUT
        echo "commit-count=$COMMIT_COUNT" >> $GITHUB_OUTPUT
        
        # Get the latest commit SHA from the list
        LATEST_SHA=$(echo "$COMMITS" | head -1 | awk '{print $1}')
        echo "latest-sha=$LATEST_SHA" >> $GITHUB_OUTPUT
        
        # Preview info
        echo "📋 Commit count: $COMMIT_COUNT"
        echo "🔄 Latest SHA: $LATEST_SHA"
